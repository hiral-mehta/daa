#include <stdio.h>
#include <string.h>

// Function to perform naive pattern matching
void naiveStringMatch(char* text, char* pattern) {
    int n = strlen(text);
    int m = strlen(pattern);

    printf("Pattern found at index(es): ");
    int found = 0;

    for (int i = 0; i <= n - m; i++) {
        int j;

        for (j = 0; j < m; j++) {
            if (text[i + j] != pattern[j]) {
                break;
            }
        }

        if (j == m) {
            printf("%d ", i);
            found = 1;
        }
    }

    if (!found) {
        printf("No match found");
    }

    printf("\n");
}

int main() {
    // char text[1000], pattern[100];

    // printf("Enter the text: ");
    // fgets(text, sizeof(text), stdin);
    // text[strcspn(text, "\n")] = '\0'; // remove newline if present

    // printf("Enter the pattern to search: ");
    // fgets(pattern, sizeof(pattern), stdin);
    // pattern[strcspn(pattern, "\n")] = '\0';
    
    char text[100], pattern[50];
    printf("Enter text: ");
    scanf("%s", text);  // reads until space/newline
    
    printf("Enter pattern: ");
    scanf("%s", pattern);

    naiveStringMatch(text, pattern);

    return 0;
}
